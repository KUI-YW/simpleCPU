vendor_name = ModelSim
source_file = 1, program_counter.vhd
source_file = 1, Verilog5.v
source_file = 1, C:/Users/admin/Desktop/isle3/simple-team24/processor_final/program_counter/program_counter.v
design_name = program_counter
instance = comp, \instr_add[0]~output , instr_add[0]~output, program_counter, 1
instance = comp, \instr_add[1]~output , instr_add[1]~output, program_counter, 1
instance = comp, \instr_add[2]~output , instr_add[2]~output, program_counter, 1
instance = comp, \instr_add[3]~output , instr_add[3]~output, program_counter, 1
instance = comp, \instr_add[4]~output , instr_add[4]~output, program_counter, 1
instance = comp, \instr_add[5]~output , instr_add[5]~output, program_counter, 1
instance = comp, \instr_add[6]~output , instr_add[6]~output, program_counter, 1
instance = comp, \instr_add[7]~output , instr_add[7]~output, program_counter, 1
instance = comp, \instr_add[8]~output , instr_add[8]~output, program_counter, 1
instance = comp, \instr_add[9]~output , instr_add[9]~output, program_counter, 1
instance = comp, \instr_add[10]~output , instr_add[10]~output, program_counter, 1
instance = comp, \instr_add[11]~output , instr_add[11]~output, program_counter, 1
instance = comp, \instr_add_is_overflow~output , instr_add_is_overflow~output, program_counter, 1
instance = comp, \clock~input , clock~input, program_counter, 1
instance = comp, \clock~inputclkctrl , clock~inputclkctrl, program_counter, 1
instance = comp, \is_branch_hazard_stall~input , is_branch_hazard_stall~input, program_counter, 1
instance = comp, \cmpb_instr_add[0]~input , cmpb_instr_add[0]~input, program_counter, 1
instance = comp, \is_cmpb_satisfied~input , is_cmpb_satisfied~input, program_counter, 1
instance = comp, \is_jump~input , is_jump~input, program_counter, 1
instance = comp, \count[0]~0 , count[0]~0, program_counter, 1
instance = comp, \jump_instr_add[0]~input , jump_instr_add[0]~input, program_counter, 1
instance = comp, \is_branch_predict~input , is_branch_predict~input, program_counter, 1
instance = comp, \count[0]~1 , count[0]~1, program_counter, 1
instance = comp, \Add1~0 , Add1~0, program_counter, 1
instance = comp, \branch_predict_add[0]~input , branch_predict_add[0]~input, program_counter, 1
instance = comp, \count~2 , count~2, program_counter, 1
instance = comp, \count~3 , count~3, program_counter, 1
instance = comp, \is_data_hazard_stall~input , is_data_hazard_stall~input, program_counter, 1
instance = comp, \reset~input , reset~input, program_counter, 1
instance = comp, \data_hazard_stall_counter~0 , data_hazard_stall_counter~0, program_counter, 1
instance = comp, \enable~input , enable~input, program_counter, 1
instance = comp, \exec~input , exec~input, program_counter, 1
instance = comp, \is_halt_commanded~input , is_halt_commanded~input, program_counter, 1
instance = comp, \is_halt~0 , is_halt~0, program_counter, 1
instance = comp, \is_overflow~3 , is_overflow~3, program_counter, 1
instance = comp, \data_hazard_stall_counter~1 , data_hazard_stall_counter~1, program_counter, 1
instance = comp, \always0~4 , always0~4, program_counter, 1
instance = comp, \is_overflow~2 , is_overflow~2, program_counter, 1
instance = comp, \branch_hazard_instr_add[3]~input , branch_hazard_instr_add[3]~input, program_counter, 1
instance = comp, \branch_predict_add[3]~input , branch_predict_add[3]~input, program_counter, 1
instance = comp, \cmpb_instr_add[3]~input , cmpb_instr_add[3]~input, program_counter, 1
instance = comp, \jump_instr_add[3]~input , jump_instr_add[3]~input, program_counter, 1
instance = comp, \branch_hazard_instr_add[2]~input , branch_hazard_instr_add[2]~input, program_counter, 1
instance = comp, \jump_instr_add[2]~input , jump_instr_add[2]~input, program_counter, 1
instance = comp, \cmpb_instr_add[2]~input , cmpb_instr_add[2]~input, program_counter, 1
instance = comp, \branch_predict_add[2]~input , branch_predict_add[2]~input, program_counter, 1
instance = comp, \branch_hazard_instr_add[1]~input , branch_hazard_instr_add[1]~input, program_counter, 1
instance = comp, \cmpb_instr_add[1]~input , cmpb_instr_add[1]~input, program_counter, 1
instance = comp, \branch_predict_add[1]~input , branch_predict_add[1]~input, program_counter, 1
instance = comp, \Add1~2 , Add1~2, program_counter, 1
instance = comp, \jump_instr_add[1]~input , jump_instr_add[1]~input, program_counter, 1
instance = comp, \count~9 , count~9, program_counter, 1
instance = comp, \count~10 , count~10, program_counter, 1
instance = comp, \count~11 , count~11, program_counter, 1
instance = comp, \branch_hazard_instr_add[11]~input , branch_hazard_instr_add[11]~input, program_counter, 1
instance = comp, \branch_predict_add[11]~input , branch_predict_add[11]~input, program_counter, 1
instance = comp, \cmpb_instr_add[11]~input , cmpb_instr_add[11]~input, program_counter, 1
instance = comp, \count~39 , count~39, program_counter, 1
instance = comp, \jump_instr_add[11]~input , jump_instr_add[11]~input, program_counter, 1
instance = comp, \branch_hazard_instr_add[10]~input , branch_hazard_instr_add[10]~input, program_counter, 1
instance = comp, \cmpb_instr_add[10]~input , cmpb_instr_add[10]~input, program_counter, 1
instance = comp, \jump_instr_add[10]~input , jump_instr_add[10]~input, program_counter, 1
instance = comp, \branch_predict_add[10]~input , branch_predict_add[10]~input, program_counter, 1
instance = comp, \branch_hazard_instr_add[9]~input , branch_hazard_instr_add[9]~input, program_counter, 1
instance = comp, \branch_predict_add[9]~input , branch_predict_add[9]~input, program_counter, 1
instance = comp, \cmpb_instr_add[9]~input , cmpb_instr_add[9]~input, program_counter, 1
instance = comp, \jump_instr_add[9]~input , jump_instr_add[9]~input, program_counter, 1
instance = comp, \branch_hazard_instr_add[8]~input , branch_hazard_instr_add[8]~input, program_counter, 1
instance = comp, \jump_instr_add[8]~input , jump_instr_add[8]~input, program_counter, 1
instance = comp, \cmpb_instr_add[8]~input , cmpb_instr_add[8]~input, program_counter, 1
instance = comp, \branch_predict_add[8]~input , branch_predict_add[8]~input, program_counter, 1
instance = comp, \branch_hazard_instr_add[7]~input , branch_hazard_instr_add[7]~input, program_counter, 1
instance = comp, \branch_predict_add[7]~input , branch_predict_add[7]~input, program_counter, 1
instance = comp, \cmpb_instr_add[7]~input , cmpb_instr_add[7]~input, program_counter, 1
instance = comp, \jump_instr_add[7]~input , jump_instr_add[7]~input, program_counter, 1
instance = comp, \branch_hazard_instr_add[6]~input , branch_hazard_instr_add[6]~input, program_counter, 1
instance = comp, \jump_instr_add[6]~input , jump_instr_add[6]~input, program_counter, 1
instance = comp, \branch_predict_add[6]~input , branch_predict_add[6]~input, program_counter, 1
instance = comp, \branch_hazard_instr_add[5]~input , branch_hazard_instr_add[5]~input, program_counter, 1
instance = comp, \branch_predict_add[5]~input , branch_predict_add[5]~input, program_counter, 1
instance = comp, \cmpb_instr_add[5]~input , cmpb_instr_add[5]~input, program_counter, 1
instance = comp, \jump_instr_add[5]~input , jump_instr_add[5]~input, program_counter, 1
instance = comp, \branch_hazard_instr_add[4]~input , branch_hazard_instr_add[4]~input, program_counter, 1
instance = comp, \jump_instr_add[4]~input , jump_instr_add[4]~input, program_counter, 1
instance = comp, \cmpb_instr_add[4]~input , cmpb_instr_add[4]~input, program_counter, 1
instance = comp, \branch_predict_add[4]~input , branch_predict_add[4]~input, program_counter, 1
instance = comp, \Add1~6 , Add1~6, program_counter, 1
instance = comp, \Add1~8 , Add1~8, program_counter, 1
instance = comp, \count~18 , count~18, program_counter, 1
instance = comp, \count~19 , count~19, program_counter, 1
instance = comp, \count~20 , count~20, program_counter, 1
instance = comp, \count[4] , count[4], program_counter, 1
instance = comp, \Add1~10 , Add1~10, program_counter, 1
instance = comp, \count~21 , count~21, program_counter, 1
instance = comp, \count~22 , count~22, program_counter, 1
instance = comp, \count~23 , count~23, program_counter, 1
instance = comp, \count[5] , count[5], program_counter, 1
instance = comp, \Add1~12 , Add1~12, program_counter, 1
instance = comp, \count~24 , count~24, program_counter, 1
instance = comp, \cmpb_instr_add[6]~input , cmpb_instr_add[6]~input, program_counter, 1
instance = comp, \count~25 , count~25, program_counter, 1
instance = comp, \count~26 , count~26, program_counter, 1
instance = comp, \count[6] , count[6], program_counter, 1
instance = comp, \Add1~14 , Add1~14, program_counter, 1
instance = comp, \count~27 , count~27, program_counter, 1
instance = comp, \count~28 , count~28, program_counter, 1
instance = comp, \count~29 , count~29, program_counter, 1
instance = comp, \count[7] , count[7], program_counter, 1
instance = comp, \Add1~16 , Add1~16, program_counter, 1
instance = comp, \count~30 , count~30, program_counter, 1
instance = comp, \count~31 , count~31, program_counter, 1
instance = comp, \count~32 , count~32, program_counter, 1
instance = comp, \count[8] , count[8], program_counter, 1
instance = comp, \Add1~18 , Add1~18, program_counter, 1
instance = comp, \count~33 , count~33, program_counter, 1
instance = comp, \count~34 , count~34, program_counter, 1
instance = comp, \count~35 , count~35, program_counter, 1
instance = comp, \count[9] , count[9], program_counter, 1
instance = comp, \Add1~20 , Add1~20, program_counter, 1
instance = comp, \count~36 , count~36, program_counter, 1
instance = comp, \count~37 , count~37, program_counter, 1
instance = comp, \count~38 , count~38, program_counter, 1
instance = comp, \count[10] , count[10], program_counter, 1
instance = comp, \Add1~22 , Add1~22, program_counter, 1
instance = comp, \count~40 , count~40, program_counter, 1
instance = comp, \count~41 , count~41, program_counter, 1
instance = comp, \count[11] , count[11], program_counter, 1
instance = comp, \always0~2 , always0~2, program_counter, 1
instance = comp, \is_overflow~5 , is_overflow~5, program_counter, 1
instance = comp, \is_init~0 , is_init~0, program_counter, 1
instance = comp, \is_init~1 , is_init~1, program_counter, 1
instance = comp, \is_init~2 , is_init~2, program_counter, 1
instance = comp, \always0~0 , always0~0, program_counter, 1
instance = comp, \always0~1 , always0~1, program_counter, 1
instance = comp, \always0~3 , always0~3, program_counter, 1
instance = comp, \count[0]~7 , count[0]~7, program_counter, 1
instance = comp, \count[0]~8 , count[0]~8, program_counter, 1
instance = comp, \count[1] , count[1], program_counter, 1
instance = comp, \Add1~4 , Add1~4, program_counter, 1
instance = comp, \count~12 , count~12, program_counter, 1
instance = comp, \count~13 , count~13, program_counter, 1
instance = comp, \count~14 , count~14, program_counter, 1
instance = comp, \count[2] , count[2], program_counter, 1
instance = comp, \count~15 , count~15, program_counter, 1
instance = comp, \count~16 , count~16, program_counter, 1
instance = comp, \count~17 , count~17, program_counter, 1
instance = comp, \count[3] , count[3], program_counter, 1
instance = comp, \LessThan1~0 , LessThan1~0, program_counter, 1
instance = comp, \LessThan1~2 , LessThan1~2, program_counter, 1
instance = comp, \LessThan1~1 , LessThan1~1, program_counter, 1
instance = comp, \LessThan1~3 , LessThan1~3, program_counter, 1
instance = comp, \count[0]~4 , count[0]~4, program_counter, 1
instance = comp, \count[0]~5 , count[0]~5, program_counter, 1
instance = comp, \branch_hazard_instr_add[0]~input , branch_hazard_instr_add[0]~input, program_counter, 1
instance = comp, \count~6 , count~6, program_counter, 1
instance = comp, \count[0] , count[0], program_counter, 1
instance = comp, \is_overflow~4 , is_overflow~4, program_counter, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
