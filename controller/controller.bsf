/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 2017  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details.
*/
(header "symbol" (version "1.1"))
(symbol
	(rect 16 16 208 256)
	(text "controller" (rect 5 0 40 12)(font "Arial" ))
	(text "inst" (rect 8 224 20 236)(font "Arial" ))
	(port
		(pt 0 32)
		(input)
		(text "instr[15..0]" (rect 0 0 40 12)(font "Arial" ))
		(text "instr[15..0]" (rect 21 27 61 39)(font "Arial" ))
		(line (pt 0 32)(pt 16 32)(line_width 3))
	)
	(port
		(pt 192 32)
		(output)
		(text "isLoad" (rect 0 0 25 12)(font "Arial" ))
		(text "isLoad" (rect 146 27 171 39)(font "Arial" ))
		(line (pt 192 32)(pt 176 32)(line_width 1))
	)
	(port
		(pt 192 48)
		(output)
		(text "isStore" (rect 0 0 27 12)(font "Arial" ))
		(text "isStore" (rect 144 43 171 55)(font "Arial" ))
		(line (pt 192 48)(pt 176 48)(line_width 1))
	)
	(port
		(pt 192 64)
		(output)
		(text "isLoadImm" (rect 0 0 44 12)(font "Arial" ))
		(text "isLoadImm" (rect 127 59 171 71)(font "Arial" ))
		(line (pt 192 64)(pt 176 64)(line_width 1))
	)
	(port
		(pt 192 80)
		(output)
		(text "isJump" (rect 0 0 28 12)(font "Arial" ))
		(text "isJump" (rect 143 75 171 87)(font "Arial" ))
		(line (pt 192 80)(pt 176 80)(line_width 1))
	)
	(port
		(pt 192 96)
		(output)
		(text "isBranch" (rect 0 0 34 12)(font "Arial" ))
		(text "isBranch" (rect 137 91 171 103)(font "Arial" ))
		(line (pt 192 96)(pt 176 96)(line_width 1))
	)
	(port
		(pt 192 112)
		(output)
		(text "isIn" (rect 0 0 12 12)(font "Arial" ))
		(text "isIn" (rect 159 107 171 119)(font "Arial" ))
		(line (pt 192 112)(pt 176 112)(line_width 1))
	)
	(port
		(pt 192 128)
		(output)
		(text "isOut" (rect 0 0 20 12)(font "Arial" ))
		(text "isOut" (rect 151 123 171 135)(font "Arial" ))
		(line (pt 192 128)(pt 176 128)(line_width 1))
	)
	(port
		(pt 192 144)
		(output)
		(text "isHalt" (rect 0 0 21 12)(font "Arial" ))
		(text "isHalt" (rect 150 139 171 151)(font "Arial" ))
		(line (pt 192 144)(pt 176 144)(line_width 1))
	)
	(port
		(pt 192 160)
		(output)
		(text "ALUsource" (rect 0 0 48 12)(font "Arial" ))
		(text "ALUsource" (rect 123 155 171 167)(font "Arial" ))
		(line (pt 192 160)(pt 176 160)(line_width 1))
	)
	(port
		(pt 192 176)
		(output)
		(text "regWrite" (rect 0 0 35 12)(font "Arial" ))
		(text "regWrite" (rect 136 171 171 183)(font "Arial" ))
		(line (pt 192 176)(pt 176 176)(line_width 1))
	)
	(port
		(pt 192 192)
		(output)
		(text "regDst" (rect 0 0 27 12)(font "Arial" ))
		(text "regDst" (rect 144 187 171 199)(font "Arial" ))
		(line (pt 192 192)(pt 176 192)(line_width 1))
	)
	(drawing
		(rectangle (rect 16 16 176 224)(line_width 1))
	)
)
