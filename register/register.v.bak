module regst
(
	input readclock,
	input writeclock,
	input reset,
	input [2:0] readaddress1,
	input [2:0] readaddress2,
	input [15:0] writedata,
	input [2:0] writeaddress,
	input writeflag,
	output reg [15:0] readdata1,
	output reg [15:0] readdata2
);
	
	reg [15:0] register [7:0];
	
	always @(negedge reset) begin 
		for(i=0; i<8; i=i+1)
			register[i] <= 16'b0000_0000_0000_0000;
	end
	
	always @(posedge readclock) begin
		readdata1 <= register[address1];
		readdata2 <= register[address2];
	end
	
	always @(posedge writeclock) begin
		if(writeflag==1'b1) begin
			register[writeadrs] <= writedata;
		end
	end
	
endmodule
		