module register_writer(
	input [15:0] instr,
	input [15:0] ALU_data,
	input [15:0] memory_data,
	input rawf,
	input rbwf,
	
	output reg [15:0] write_data,
	output reg [2:0] write_address,
	output reg is_write
);

	assign {write_data,write_address,is_write} = f(instr,ALU_data,memory_data,rawf,rbwf);

	function (
		input [15:0] instr,
		input [15:0] ALU_data,
		input [15:0] memory_data,
		input rawf,
		input rbwf
	);
		begin
	
			reg op1 = instr[15:14];
			reg rawa = instr[13:11];
			reg rbwa = instr[10:8];
			
			write_data <= (op1 == 2'b00 ? ALU_data : memory_data);
			
			if(rawf) begin
				write_address <= rawa;
			end
			else if(rbwf) begin
				write_address <= rbwa;
			end
			else begin
				write_address <= 3'b000;
			end
			
			is_write <= (rawf | rbwf);
			
		end
	
	endfunction
	
endmodule	